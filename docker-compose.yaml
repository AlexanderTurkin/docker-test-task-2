services:
  bot:
    build: ./taxi_bot
    container_name: bot
    restart: always
    env_file:
      - .env
    depends_on:
      - pgbouncer
    networks:
      - app

  botdb:
    build: ./taxi_bot_db
    container_name: botdb
    restart: always
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - pgbouncer
    networks:
      - app

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - PGDATA='/var/lib/postgresql/data/pgdata'
    networks:
      - app
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    restart: always
    env_file:
      - .env
    environment:
      - DB_USER=${PGUSER}
      - DB_PASSWORD=${PGPASSWORD}
      - DB_HOST=postgres
      - POOL_MODE=session
      - MAX_DB_CONNECTIONS=0
      - DEFAULT_POOL_SIZE=40
      - ADMIN_USERS=postgres,${PGUSER}
      - AUTH_TYPE=scram-sha-256
    ports:
      - ${PGPORT}:${PGPORT}
    depends_on:
      - postgres
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  postgres-data: {}